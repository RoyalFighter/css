import {useState} from 'react';
 //import State from './State'; 
import './App.css';
//import User0 from './User0';

function App() {
  const[data,setData]=useState("Robin");
  function updatedata(){
     setData("Hero Aalam"); 
     function updatedata(){
            setData("Hero Aalam");
      }  
      return(<div>
        <h1>data</h1>
    <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full"onClick={()=>setData("Hello")}>Click me</button>
    </div>
      );
     

      }



//   // function Apple()   {                    // comp bhitra comp  
//   //   return (<div>Apple</div>);
//   // }
//  function Apple() { 
//    alert("Button Thichis");
//   }
//     return (
//       <div >
//         <div>
//       <h1 className='text-6xl bg-blue-500 rounded-md border-rose-40 shadow-lg mt-'>
//         Hello WWorld!
//         <button className='bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full'onClick={Apple/*funtion call garna tarika no braces*/}>Click me</button>
        
//         </h1>
//         {/*<button className='bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full'onClick={()=> alert("Arrow")direct funtion call garna tarika }>Click me</button>*/
//       </div>
//    {/*<User0 />*/}
//    //<State />
//    {/* <Apple /> */}
//   </div>
//   );
// }

state

// import {useState} from 'react';
//  function State(){
//      const[data,setData]=useState("Robin");
//     //  function updatedata(){
//     //      setData("Hero Aalam");
//     //  }

// return(
// <div>
//     <h1>Robin </h1>
//     <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full"onClick={()=>setData("Hello")}>Click me</button>
       


//     </div>
// );
//  }
//  export default State;


under app .js ma (use of states(containner like variable in function component)

import {useState} from 'react';
function App() {
  const[data,setData]=useState("Robin");
  return(<div>
        <h1>{data}</h1>
    <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full"onClick={()=>setData("Hello")}>Click me</button>
    </div>
      );
     

      }
      
export default App;
 end of function component

class component 
import React,{Component} from 'react';
class  App extends Component {
  constructor(){
   super();
     this.state ={data:1}
   
  
  }


    render(){
  return(
  <div>
        <h1>{this.state.data}</h1>
    <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full"onClick={()=>this.setState({data:this.state.data*2})}>Click me</button>
    </div>
      );
     

      }
      
    }
    export default App;

end 

props(properties) as functional compontent just to pass data
passa garko data rect la nai diffrent user ma rakhdincha
props can only be changed and passed from parent component (ie cannoot change in receiving or childen comp)
app.js
import Student from './Student';
function  App ()
 {
return(
  <div>
        <h1>props</h1>
    {/* <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full"onClick={()=>this.setState({data:this.state.data*2})}>Click me</button> */}
    
     <Student name={"Robin"} Email="abc@gamail.com" other={{adress:"nepal",mobile:"111"}}/>  {/*props */}
     <Student name={"hari"} Email="abc@gamail.com" other={{adress:"india",mobile:"000"}} />
     
     
    </div>
      );
     

      }
      export default App;

student.js
import Student from './Student';
function  App ()
 {
return(
  <div>
        <h1>props</h1>
    {/* <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full"onClick={()=>this.setState({data:this.state.data*2})}>Click me</button> */}
    
     <Student name={"Robin"} Email="abc@gamail.com" other={{adress:"nepal",mobile:"111"}}/>  {/*props */}
     <Student name={"hari"} Email="abc@gamail.com" other={{adress:"india",mobile:"000"}} />
     
     
    </div>
      );
     

      }
      export default App;

//end of prrops funtion
 
to change props value on a click of button 
student.js


//student as component to store multiple students props is object so use .to print value
// props ko thau ma j lakhana ni huncha
function Student(p) {
return(
    <div>
        <h1>Hello{p.name}</h1>
        
        
    </div>
);
}
export default Student;
app.js


import Student from "./Student";

function  App (){

 
return(
  <div>
        <h1 className="text-9xl text-red-500">Proops</h1>
  {/* <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full"onClick={()=>setName("BASANTA")}>Click me</button> */}
     <Student name="Robin" email="aaf@gmail.com"></Student> {/*passing prrops */}
     <Student name="Bin" email="aaf@gmail.com"></Student>
     </div>
      );
     }
      export default App;

Student.js

import React from "react";
class Student extends React.Component {
    render(){
        return(
        <div>Student:{this.props.name +" yes Sir"} {/*props recieved from App.js*/}
        <p>Email:{this.props.email}</p></div>
        )
    }
}
export default Student;
//to change on click
app.js
mport Student from "./Student";
import React from "react";

class App extends React.Component(){

      constructor(){
            super();
            this.state={name:"Rahul"
      }}
      render(){
return(
  <div>
        <h1 className="text-9xl text-red-500">Proops</h1>
      <Student name={this.state.name} email="aaf@gmail.com"></Student> {/*passing prrops */}
     <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full"onClick={()=>this.setState({name:"salman"})}>Click me</button>
     </div>
      );
     }}
      export default App;

student.js
import React from "react";
class Student extends React.Component {
    render(){
        return(
        <div>Student:{this.props.name +" yes Sir"} {/*props recieved from App.js*/}
        <p>Email:{this.props.email}</p></div>
        )
    }
}
export default Student;

//end

//get input box value onclick
app.js
import React from 'react'
import "./App.css"

function App() {
  const [data,setData]=React.useState(null);
  const [print,setPrint]=React.useState(false);
  function getData (val){
    setData(val.target.value);
    setPrint(false);
  }
  return (
    <div className='app'>
     {
       print?
       <h1>{data}</h1>:null
     }
    
    <input type="text"className="bg-blue-100 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-20px" onChange={getData}/>
    <button className="bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-20px marginRight: 20px"  onClick={()=>setPrint(true)}>update</button>
    </div>
  )
}

//end
 Hide and show element on different button

import React from "react";

function  App (){
      const[status, setStatus] =React.useState(0);
    
return(
  <div>{
        status?
     
        <h1 className='text-5xl text-red-300'>Hello World</h1>:null
      }
    <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-20px" onClick={()=>setStatus(false)}>Hide</button>
    <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mt-10px"onClick={()=>setStatus(true)}>Show</button>
     
    </div>
      );
     

      }
      export default App;
//for single button
import React from "react";

function  App (){
      const[status, setStatus] =React.useState(0);
    
return(
  <div>{
        status?
     
        <h1 className='text-5xl text-red-300'>Hello World</h1>:null
      }
   <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-20px" onClick={()=>setStatus(!status)}>click</button>
     
    </div>
      );
     

      }
      export default App;
//end
Get data from form

import { useState } from 'react';
import './App.css';
function  App (){
      const[name,setName]=useState("");
      const[tnc,setTnc]=useState(false);
      const[intrest,setIntrest]=useState("");
      function getFormData(e){
            e.preventDefault();
      }
return(
  <div>
        <h1 className='text-5xl text-red-300'>Hello World</h1>
      <form onSubmit={getFormData}>
            <input type='text' placeholder='Enter your name'value={name}onChange={(e)=>setName(e.target.value)}/><br/><br/>
            <select onChange={(e)=>setTnc(e.target.value)}>
                   <option >Select Option</option>
                  <option >marvel</option>
                  <option >Dc</option>
            </select><br/><br/>
            <input type="checkbox"onChange={(e)=>setIntrest(e.target.checked)}/><span>Accept terms and Condition</span>
            <br/><br/>
            <button className="bg-green-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-20px">Submit</button>
            <button className="bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-20px">clear</button>

      </form>
   
    </div>
      );
     

      }
      export default App;
//end

//condition rendering
for if else
profile.js
import Profile from './Profile';
import './App.css';
function  App (){
      
      
return(
  <div>
        <h1 className='text-5xl text-red-300 ' >Hello World</h1>
      
   <Profile/>
    </div>
      );
     

      }
      export default App;


App.js
import Profile from './Profile';
import './App.css';
function  App (){
      
      
return(
  <div>
        <h1 className='text-5xl text-red-300 ' >Hello World</h1>
      
   <Profile/>
    </div>
      );
     

      }
      export default App;

//
for if else if more than 2 condition can be any num
 App.js
import {useState} from 'react';
 function Profile() {
        const [loggedIn,setLoggedIn] = useState(2);
     return(
 <div>
     {
            loggedIn==1? <h1>You are logged in</h1> :loggedIn==2? <h1>You are not logged in</h1>:<h1>Error while loggin </h1>
     }
 </div>
     );
}
export default Profile;
//Pass function as prrops
app.js

import Profile from './Profile';
import './App.css';
import Member from './Member';
function  App (){
      function getData(){
            alert('hello from app.js');
      }
      
      
return(
  <div>
        
   <Profile data={getData}/>
   <div>
      <Member data={getData}/>
   </div>
    </div>
      );
     

      }
      export default App;


Member.js
import React from "react";
function Member (props) {
  return (
    <div>
      <h1 className="text-5xl text-red-300 ">Function as proops</h1>
      <button
        className="bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-20px"
        onClick={props.data}
      >
        Call data function
      </button>
    </div>
  );
}
export default Member;
profile.js
import React from "react";
function Profile(props) {
  return (
    <div>
      <h1 className="text-5xl text-red-300 ">Function as proops</h1>
      <button
        className="bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-20px"
        onClick={props.data}
      >
        Call data function
      </button>
    </div>
  );
}
export default Profile;
//end
//constuctor Life cycle Method
app.js
import React from "react";
class App extends React.Component {
      constructor() {
            super();
            this.state = {
                  data: "Robin"
            }

      }
      render() {
        return (
          <div>
            <h1>Hello {this.state.data}</h1>
          </div>
        );
      }
}export default App;



//end

//Render(execute and present)life cycle Method(render method only on class comp)

//hooks(start with use functional component to use class comp in functional comp
app.js


import React,{useState} from "react";//use state is a hook that is used to create a state variable in react.

function App(){
  const [data,setData] = useState("Robin");
      
        return (
          <div>
            <h1>{data}</h1>
          
            <button className="bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-20px"onClick={()=>setData("RAmesh")}>update</button>
          </div>
        );
      }
export default App;
//end
Use effect hooks
 usewithout condition
seEffect(() => {
    alert("useEffect")
    )}
WITH CONDITION PROOPS STATE
user.js

import React,{useEffect,useState} from "react";
function User(props){
  
  useEffect(()=>{},[props.data])//only update for data
 
    return (
          <div>
            <h1>count props:{props.count}</h1>
            <h1>dataprops:{props.data}</h1>
           
          </div>
        );
      }
export default User;
app.js
import User from "./User";
import React,{useEffect,useState} from "react";
function App(){
  const [count,setCount] = useState(1000);
  const [data,setData] = useState(10);
  useEffect(()=>{},[data])
  useEffect(()=>{},[count])
    return (
          <div>
            
            <User count={count} data={data}/>
            <button className="bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-20px"onClick={()=>setData(data+1)}>update DAta</button>
            <button className="bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-20px"onClick={()=>setCount(count+1)}>update Count</button>
          </div>
        );
      }
export default App;

//end
//array return doesnot support for but do support map
app.js
import React from "react";
function App(){
  const student=["Anil","Raj","Ravi"];
  //map syntax
  
 

    return (
          <div>

   
   
    {student.map((item)=><h1>{item}</h1>)}

 
           </div>
        );
          }  
export default App;


//list using boootstrap
app.js
import './App.css';
import React from 'react'
import {Table} from 'react-bootstrap'
function App() {
  const users = [
    { name: 'Anil', email: 'anil@test.com', contact: '111' },
    { name: 'Burce', email: 'bruce@test.com', contact: '222' },
    { name: 'Peter', email: 'peter@test.com', contact: '111' },
    { name: 'Sam', email: 'sam@test.com', contact: '777' },
  ]
  return (
    <div className="App">
      <h1>List With Bootstrap Table</h1>
      <Table striped variant="dark" >
        <tbody>
        <tr>
          <td>Name</td>
          <td>Email</td>
          <td>Contacts</td>
        </tr>
        {
          users.map((item,i)=>
          item.contact==='111'?
          <tr key={i}>
          <td>{item.name}</td>
          <td>{item.email}</td>
        <td>{item.contact}</td>
        </tr>:null
          )
        }
        </tbody>
      </Table>
    </div>
  );
}

export default App;
//nested list
import './App.css';
import React from 'react'
import { Table } from 'react-bootstrap'
function App() {
  const users = [
    {
      name: 'Anil', email: 'anil@test.com', address: [
        { hm: '101', city: 'Noida', country: 'India' },
        { hm: '10', city: 'Gurgaon', country: 'India' },
        { hm: '23', city: 'Noida', country: 'India' },
        { hm: '45', city: 'Delhi', country: 'India' },
      ]
    },
    {
      name: 'Burce', email: 'bruce@test.com', address: [
        { hm: '101', city: 'Noida', country: 'India' },
        { hm: '10', city: 'Gurgaon', country: 'India' },
        { hm: '23', city: 'Noida', country: 'India' },
        { hm: '45', city: 'Delhi', country: 'India' },
      ]
    },
    {
      name: 'Peter', email: 'peter@test.com', address: [
        { hm: '101', city: 'Noida', country: 'India' },
        { hm: '10', city: 'Gurgaon', country: 'India' },
        { hm: '23', city: 'Noida', country: 'India' },
        { hm: '45', city: 'Delhi', country: 'India' },
      ]
    },
    {
      name: 'Sam', email: 'sam@test.com', address: [
        { hm: '101', city: 'Noida', country: 'India' },
        { hm: '10', city: 'Gurgaon', country: 'India' },
        { hm: '23', city: 'Noida', country: 'India' },
        { hm: '45', city: 'Delhi', country: 'India' },
      ]
    },
  ]
  return (
    <div className="App">
      <h1>List with Nested Array</h1>
      <Table variant="dark"  >
        <tbody>
          <tr>
          <td>S.N</td>
            <td>Name</td>
            <td>Email</td>
            <td>Address</td>
          </tr>
          {
            users.map((item,i)=>
            <tr key={i}>
               <td>{i+1}</td>
            <td>{item.name}</td>
          <td>{item.email}</td>
            <td>
              {/*  */}
              <Table variant="dark"  >
        <tbody>
              {
                item.address.map((data)=>

                <tr>
                  <td>{data.hm}</td>
                  <td>{data.city}</td>
                  <td>{data.country}</td>
                </tr>
                )
              }
              </tbody>
              </Table>
              {/*  */}
            </td>
          </tr>
          )
          }
        </tbody>
      </Table>

    </div>
  );
}

export default App;
//transfer data from vhild to parent(lifting step up)
app.js
import React from 'react'
import './App.css';
import User from './User'
function App() {
  function getName(name)
  {
    alert(name)
  }
  return (
    <div className="App">
      <h1>Lifting State Up</h1>
      <User getData={getName} />
    </div>
  );
}

export default App;
user.js
function User(props)
{
    const name="Anil Sidhu"
    return(
        <div>
            <h1>User Name is : </h1>
            <button onClick={()=>props.getData(name)} >Click Me</button>
        </div>
    )
}

export default User;
//pure coomp prevent unnecessry rendering render if data is nue else no render for same data
App.js
import './App.css';
import React from 'react'
import Counter from './Counter'
class  App extends React.Component {
  constructor()
  {
    super();
    this.state={
      count:1
    }
  }
 render()
 {
  return (
    <div className="App">
     <Counter count={this.state.count} />
      <button 
      onClick={()=>{this.setState({count:this.state.count+1})}}
      >Update Count</button>
    </div>
  );
 }
}

export default App;
Counter.js
import React from 'react'
class Counter extends React.PureComponent{
    render()
    {
        console.warn("counter re-render")
        return(
            <div>
                <h1>Counter Component {this.props.count}</h1>
            </div>
        )
    }
}

export default Counter
usememo to prevent unwanted rendering


ref is used to change proprities jabarjasti(change in html dom)
app.js
import './App.css';
import React,{createRef} from 'react'
class App extends React.Component {
  constructor()
  {
    super();
    this.inputRef=createRef();
  }
  componentDidMount()
  {
    // console.warn(this.inputRef.current.value="1000")
  }
  getVal()
  {
    console.warn(this.inputRef.current.value)
    this.inputRef.current.style.color="red"
    this.inputRef.current.style.backgroundColor="black"

  }
  render() {
    return (
      <div className="App">
        <h1>Ref in React </h1>
        <input type="text" ref={this.inputRef}  />
        <button onClick={()=>this.getVal()}>Check Ref</button>
      </div>
    );
  }
}

export default App;

useref for functional comp
app.js
import './App.css';
import React,{useRef} from 'react'
function App() {
  let inputRef=useRef(null);
  function controlInput()
  {
  //  inputRef.current.value="abc"
  // inputRef.current.style.display="none"
  inputRef.current.focus()
  }
  return (
    <div className="App">
      <h1>useRef in React </h1>
      <input type="text" ref={inputRef} />
      <button onClick={controlInput}>Handle Input</button>
    </div>
  );

}

export default App;
//forward ref advance v of ref used when to change dom from different comm
button on parent input box in child com so here we change in input box from parent button
pass ref as props
app.js
import './App.css';
import React ,{useRef} from 'react'
import User from './User'
function App() {
  let inputRef=useRef(null)
  function updateInput()
  {
    inputRef.current.value="1000";
    inputRef.current.style.color="red"
    inputRef.current.focus()


  }
  return (
    <div className="App">
      <h1>forwardRef in React </h1>
      <User ref={inputRef} />
      <button onClick={updateInput} >Update Input Box</button>
    </div>
  );

}
export default App;
user.js
import React,{forwardRef} from 'react'
function User(props,ref)
{
    return(
        <div>
            <input ref={ref} type="text" />
        </div>
    )
}

export default forwardRef(User);

//controlled comp  input feild being controlled thouugh state uncontrolled com is directly controlled by dom)
import './App.css';
import React,{useState} from 'react'
function App() {
  const [val,setVal]=useState("")

   return (
    <div className="App">
      <h1>Controlled Component </h1>
      <input type="text" value={val} onChange={(e)=>setVal(e.target.value)} />
   <h1>{val}</h1>
    </div>
  );

}
export default  App;
//uncontrolled (controlled through js or ref)
app.js
import './App.css';
import React,{useState} from 'react'
function App() {
  const [val,setVal]=useState("")

   return (
    <div className="App">
      <h1>Controlled Component </h1>
      <input type="text" value={val} onChange={(e)=>setVal(e.target.value)} />
   <h1>{val}</h1>
    </div>
  );

}
export default  App;


//Hoc high order component (a comp that takes other comp as input(props) and give return comp)
app.js
import './App.css';
import React, { useRef, useState } from 'react'
function App() {
  return (
    <div className="App">
      <h1>HOC </h1>
      <HOCRed cmp={Counter} />
      <HOCGreen cmp={Counter} />
      <HOCBlue cmp={Counter} />

    </div>
  );
}
function HOCRed(props)
{
  return <h2 style={{backgroundColor:'red',width:100}}>Red<props.cmp /></h2>
}
function HOCGreen(props)
{
  return <h2 style={{backgroundColor:'green',width:100}}>Grren<props.cmp /></h2>
}
function HOCBlue(props)
{
  return <h2 style={{backgroundColor:'blue',width:100}}>blue <props.cmp /></h2>
}
function Counter()
{
  const [count,setCount]=useState(0)
  return<div>
    <h3>{count}</h3>
    <button onClick={()=>setCount(count+1)}>Update</button>
  </div>
}

export default App;
//routing(component converted into pages and link is atached so that we get seperate page for each function)
app.js
import './App.css';
import React from 'react'
import { BrowserRouter as Router, Link, Route } from 'react-router-dom'
function App() {
  return (
    <div className="App">
      <Router>
        <Link to="/home" >Home</Link>
        <br></br>
        <Link to="/about" >About</Link>
        <Route path="/home" > <Home /></Route>
        <Route path="/about" > <About /></Route>


      </Router>
    </div>
  );
}

function Home() {
  return (
    <div>
      <h1>Home Page</h1>
      <p>This is my Home Page</p>
    </div>
  )
}
function About() {
  return (
    <div>
      <h1>About Page</h1>
      <p>This is my About Page</p>
    </div>
  )
}
export default App;
404 not found
import './App.css';
import React from 'react'
import { BrowserRouter as Router, Link, Route,Switch } from 'react-router-dom'
function App() {
  return (
    <div className="App">
      <Router>
        <Link to="/" >Home</Link> <br /><br />
        <Link to="/about" >About</Link> <br />
        <Link to="/login" >Login</Link> <br />

        <Switch >
        <Route path="/" exact={true}><Home /></Route>
        <Route path="/about"><About /></Route>
        <Route path="*"><PageNotFound /></Route>

        </Switch>
      </Router>
    </div>
  );
}

function Home() {
  return (<div>
    <h1>Home Page</h1>
    <p>This is Home Page</p>
  </div>)
}

function About() {
  return (<div>
    <h1>About Page</h1>
    <p>This is About Page</p>
  </div>)
}
function PageNotFound() {
  return (<div>
    <h1>404 Page</h1>
    <p>This is Not found</p>
  </div>)
}

export default App;
//Dynamic Routing with prams
app.js
import './App.css';
import React from 'react'
import {BrowserRouter as Router,Link,Route} from 'react-router-dom'
import User from './User'
function App() {
  let user=[
    {name:'anil',id:1},
    {name:'peter',id:2},
    {name:'bruce',id:3},
    {name:'tony',id:4},
  ]
  return (
    <div className="App">
      <Router>
      <h1>React Dynamic Routing</h1>
      {
        user.map((item)=>
      <div><Link to={"/user/"+item.id+"/"+item.name}>{item.name}</Link></div>)
      }
      <Route path="/user/:id/:name" ><User /></Route>
      </Router>
    </div>
  );
}
export default App;
user.js
import {withRouter} from 'react-router-dom'
function User(props)
{
    console.warn(props)
    return(
    <div><h1>User No {props.match.params.id}</h1>
    <h1>User Name {props.match.params.name}</h1></div>

    )
}

export default withRouter(User);
//api(Application  programming interface)
get to get data
import './App.css';
import React,{useEffect,useState} from 'react'
function App() {
  const [users,setUser]=useState([])
  useEffect(()=>{
    fetch("http://localhost:4000/todo").then((result)=>{
      result.json().then((resp)=>{
        // console.warn(resp)
        setUser(resp)
      })
    })
  },[])
  console.warn(users)
  return (
    <div className="App">
      <h1>Get API Call </h1>
      <table border="1">
       <tbody>
       <tr>
          <td>ID</td>
          <td>Name</td>
          <td>Email</td>
          <td>Mobile</td>
        </tr>
        {
          users.map((item,i)=>
            <tr key={i}>
            <td>{item.userId}</td>
          <td>{item.name}</td>
          <td>{item.email}</td>
            <td>{item.mobile}</td>
          </tr>
          )
        }
       </tbody>
      </table>
    </div>
  );
}
export default App;